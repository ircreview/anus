# Janus configuration file
#
# This is a line-based configuation file, divided into blocks for networks
# and other grouped settings.

# Set block: settings for the janus server itself
set {
	# Server name - set this to a single unique word. This is used to identify
	# the server in the interjanus protocol.
	# This does NOT need to be a domain name; it should be short.
	name iRelay
	# Saved data location - this is the file which janus will load and save
	# state (such as the list of shared channels) between runs
	save janus.dat
	# Janus nick - change this if you want a different interface nick
	# ident and host are similarly settable
	janus_nick iRelay
	# Administrator password - if set, this enables an "admin" account with 
	# full access to all commands. Once you have created normal accounts,
	# this should be disabled as the password is stored in plaintext.
	password verysecret
	# Link mode - use janus as a network partition or a transparent bridge
	#  link - network partition, channels must be explicitly linked
	#  bridge - transpaent link, all channels linked, opers are more global
	lmode link
	# Run mode - process execution style
	#  mplex - Handle SSL and sockets using C; allows for perl process to be
	#	transparently restarted if perl's memory allocation gets too large
	#  uproc - Handle sockets internally to the worker process
	# If "-daemon" is appended, janus will daemonize and optionally record its PID
#	pidfile janus.pid
#	runmode uproc-daemon

	# Other parameters as defined by modules may be present here
	# Example: Commands::Debug takes a date-based format for the dump files
	datefmt %Y%m%d-%H%M%S

	# SSL certificate. Only required if you are using an SSL server port,
	# but will be presented as client certificates on connections
	# These can be overridden in an individual link block
	ssl_certfile janus-cert.pem
	ssl_keyfile janus-key.pem
	# Certificate Authority to verify certificates against - incoming and outgoing
	#ssl_cafile janus-cert.pem
}

# Modules block: this is a list of modules which are loaded at startup.
# Modules can also be loaded or unloaded while janus is running.
# See README for a short description of each module.
modules {
	Commands::*
	Modules::Ban
	Modules::KeepMode
	Modules::Signals
}

# Log blocks

log log/%Y-%m-%d-%H:%M:%S {
	# Type - a module in the Log package
	# For "File" logs, the name is a strftime format string that will become the filename
	type File
	# Filter - what events to send to the log. Space-separated values
	# See Log.pm for a full list; this will produce a reasonable log.
	# Uncomment the filter to make a full log if you are submitting a bug report.
	filter debug info warn err audit command debug_in info_in warn_in err_in hook_err

	## The following settings are specific to the File type:
	# Run a dump before opening the log file (for possible replays)
	#dump 1
	# rotate the log every N seconds
	rotate 86400
	# action to take on the log after closing
	closeact gzip
}

# Channel log: <netid>#channel
log net#logchan {
	type Channel
	filter audit
	style color
}

# Listen blocks: listen for incoming server connections
#
# No listen block is required if you have janus connect to your servers
#
# The type of server is determined by the IP of the incoming connection;
# one port can be used for SSL and non-SSL, and for all types of servers.
# You cannot accept incoming connections from a server if another server
# shares its IP address; use outgoing connections or alternative IPs.
listen 8005
listen 1.2.3.4:8006

# Network link block - one block is required per network
# link <netid>
link u3 {
	# Server type. This is a module in the Server package
	type Unreal
	# Should we try to autoconnect to this network by default?
	autoconnect 1
	# Address to connect to. Will do a DNS lookup if needed
	# Using DNS will disable incoming connections from this server
	linkaddr ::1
	# Port to connect to
	linkport 8001
	# Source address (optional, for multihomed hosts)
	linkbind ::1
	# Password which is sent
	sendpass pass
	# Password which is expected to receive
	recvpass pass
	# Link type: either plain or ssl. Also used for incoming connections.
	linktype ssl
	# For SSL links, certificate fingerprint may be checked.
	# See extras/get-fp to read the fingerprint of an existing server
	# This is done instead of checking the CA
	ssl_fp da39a3ee5e6b4b0d3255bfef95601890afd80709
	# Long name of this network
	netname Test 1
	# What server name is used to introduce ourselves
	# Optional, defaults to NAME.janus where NAME is set above
	linkname hub.janus
	# Unreal-only: numerics used for janus servers. Optional, defaults to 100-600
	numeric_range 40-45,70,85-190
	# Untrusted: if set, don't send real IP/host to this network
	# untrusted 1
}

# Link block for an InspIRCd 1.1 server
# (protocol details, module list, etc are autonegotiated on connect)
link i1 {
	type Inspircd_1105
	# Fallback links: Any parameter that ends in ".1" is changed depending
	# on which server we are connecting to. Servers are tried in round-robin
	# fashion, with server 1 always being tried first.
	linkaddr.1 4.2.2.2
	linkaddr.2 4.2.2.3
	# other paramaters can be specified without the link suffix if they are
	# the same for all fallback servers
	linkport 8003
	linktype plain
	sendpass pass
	recvpass.1 password
	recvpass.2 passwurd
	netname Insp Server
	autoconnect 1
}

# Other server protocols link the same way.
# See the protocol module names in src/Server/
link chy {
	type TS6
# TS6 takes an additional parameter for the ircd type
	ircd charybdis
	linkaddr 4.2.2.2
	linkport 1234
	linktype plain
	sendpass abc
	recvpass def
	netname Charybdis Server
}

# Inter-janus link block
# The link id must match the set::name of the remote server
link myserver {
	type InterJanus
	linkaddr ::1
	linkport 8009
	linktype ssl
	sendpass pass
	recvpass ssap
	netname That Other Server
	autoconnect 0
	ssl_certfile alt-server.cert.pem
	ssl_keyfile alt-server.key.pem
}

# Relay bot link block
link cbot {
	type ClientBot
	linkaddr 1.2.3.4
	linkport 6667
	# ClientBot supports 3 link types: ssl, plain, tls.
	# tls requires the server to support STARTTLS
	linktype tls
	nick jmirror
	servpass ServerPassWord
	nspass NickServPassWord
	# the nick must already be registered, and the bot will not ghost anyone camping
	netname A Relay Bot
	autoconnect 1
}
